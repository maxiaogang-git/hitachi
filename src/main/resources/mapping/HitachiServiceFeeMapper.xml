<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hitachi.mapper.HitachiServiceFeeMapper">

    <select id="getDataTotal" resultType="java.lang.Integer">
        SELECT COUNT(A.UUID) FROM (<include refid="baseServiceFeeData"/>) A
    </select>

    <select id="getServiceFeeInfo" resultType="com.example.hitachi.entity.HitachiServiceFeeEntity">
        <include refid="baseServiceFeeData"/>
        <include refid="pagingSql"/>
    </select>

    <sql id="baseServiceFeeData">
        SELECT
            SF.UUID,
            SF.CONTRACT_NO,
            SF.CONTRACT_BUYER,
            SF.USE_COMPANY,
            SF.COMPANY_NAME,
            SF.SERVE_FEE_CASH,
            SF.CONTRACT_LOAN_TOTAL,
            SF.SEND_COMPANY_DATE,
            SF.GET_CONFIRM_DATE,
            SF.PERSON_LIABLE,
            SF.FIRST_PAY_FEE,
            SF.FIRST_PAY_DATE,
            SF.IS_THREE_CONTRACT,
            SF.SECOND_PAY_FEE,
            SF.SECOND_PAY_DATE,
            SF.THIRD_PAY_FEE,
            SF.THIRD_PAY_DATE,
            SF.NOTE
        FROM
            HITACHI_SERVE_FEE SF
        WHERE SF.SHOW_YN = 'Y'
        <if test='contract_no != "" and contract_no !=null '>
            AND SF.CONTRACT_NO LIKE '%' #{contract_no} '%'
        </if>
        <if test='contract_buyer != "" and contract_buyer != null '>
            AND SF.CONTRACT_BUYER LIKE '%' #{contract_buyer} '%'
        </if>
        <if test='use_company != "" and use_company != null '>
            AND SF.USE_COMPANY LIKE '%' #{use_company} '%'
        </if>
        <if test='person_liable != "" and person_liable != null '>
            AND SF.PERSON_LIABLE LIKE '%' #{person_liable} '%'
        </if>
        <if test='is_three_contract != "" and is_three_contract != null '>
            AND SF.IS_THREE_CONTRACT LIKE '%' #{is_three_contract} '%'
        </if>
        <if test='(send_start_date != "" and send_start_date != null) and (send_end_date != "" and send_end_date != null)'>
            AND SF.SEND_COMPANY_DATE BETWEEN #{send_start_date} AND #{send_end_date}
        </if>

        <if test='(receive_start_date != "" and receive_start_date != null) and (receive_end_date != "" and receive_end_date != null)'>
            AND SF.GET_CONFIRM_DATE BETWEEN #{receive_start_date} AND #{receive_end_date}
        </if>

        ORDER BY SF.SEND_COMPANY_DATE DESC

    </sql>

    <sql id="pagingSql">
        LIMIT #{pageNo},#{pageSize}
    </sql>



    <insert id="addServiceFee" parameterType="HitachiServiceFeeEntity" >
            INSERT INTO HITACHI_SERVE_FEE(
                UUID,
                CONTRACT_NO,
                CONTRACT_BUYER,
                USE_COMPANY,
                COMPANY_NAME,
                SERVE_FEE_CASH,
                CONTRACT_LOAN_TOTAL,
                SEND_COMPANY_DATE,
                GET_CONFIRM_DATE,
                PERSON_LIABLE,
                FIRST_PAY_FEE,
                FIRST_PAY_DATE,
                IS_THREE_CONTRACT,
                SECOND_PAY_FEE,
                SECOND_PAY_DATE,
                THIRD_PAY_FEE,
                THIRD_PAY_DATE,
                NOTE,
                SHOW_YN)
                VALUES(
                #{uuid},
                #{contract_no},
                #{contract_buyer},
                #{use_company},
                #{company_name},
                #{serve_fee_cash},
                #{contract_loan_total},
                #{send_company_date},
                #{get_confirm_date},
                #{person_liable},
                #{first_pay_fee},
                #{first_pay_date},
                #{is_three_contract},
                #{second_pay_fee},
                #{second_pay_date},
                #{third_pay_fee},
                #{third_pay_date},
                #{note},
                'Y')

    </insert>


    <update id="batchDeleteServiceFee" parameterType="java.util.List">
        UPDATE HITACHI_SERVE_FEE SF SET SHOW_YN = 'N' WHERE UUID IN
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>

    </update>


</mapper>